[1mdiff --cc client/app/account/login/login.controller.js[m
[1mindex aec818c,5d2bdb0..0000000[m
[1m--- a/client/app/account/login/login.controller.js[m
[1m+++ b/client/app/account/login/login.controller.js[m
[36m@@@ -1,42 -1,40 +1,80 @@@[m
[32m++<<<<<<< HEAD[m
[32m +(function () {[m
[32m +  "use strict";[m
[32m +[m
[32m +  angular[m
[32m +    .module('app.account')[m
[32m +    .controller('LoginCtrl', LoginCtrl);[m
[32m +[m
[32m +  LoginCtrl.$inject = ['$scope', 'Auth', '$state', '$window','$location'];[m
[32m +[m
[32m +  function LoginCtrl($scope, Auth, $state, $window, $location) {[m
[32m +      $scope.user = {};[m
[32m +      $scope.errors = {};[m
[32m +[m
[32m +    $scope.$parent.seo = {[m
[32m +      pageTitle:'Please log in',[m
[32m +      pageDescription:'place for logging in'[m
[32m +    };[m
[32m +[m
[32m +      $scope.login = function(form) {[m
[32m +        $scope.submitted = true;[m
[32m +        if (form.$valid) {[m
[32m +          Auth.login({[m
[32m +            email: $scope.user.email,[m
[32m +            password: $scope.user.password[m
[32m +          })[m
[32m +            .then(function() {[m
[32m +              $state.go('dashboard');[m
[32m +            })[m
[32m +            .catch(function(err) {[m
[32m +              $scope.errors.other = err.message;[m
[32m +            });[m
[32m +        }else{$scope.errors.other = "password's dont match"}[m
[32m +      };[m
[32m +[m
[32m +      $scope.loginOauth = function(provider) {[m
[32m +        $window.location.href = '/auth/' + provider;[m
[32m +      };[m
[32m++=======[m
[32m+ angular[m
[32m+   .module('app.account')[m
[32m+   .controller('LoginCtrl', LoginCtrl);[m
[32m+ [m
[32m+ LoginCtrl.$inject = ['$scope', 'Auth', '$state', '$window', '$location'];[m
[32m+ [m
[32m+ function LoginCtrl($scope, Auth, $state, $window, $location) {[m
[32m+   $scope.user = {};[m
[32m+   $scope.errors = {};[m
[32m+ [m
[32m+   $scope.$parent.seo = {[m
[32m+     pageTitle: 'Please log in',[m
[32m+     pageDescription: 'place for logging in'[m
[32m+   };[m
[32m+ [m
[32m+   $scope.login = function (form) {[m
[32m+     $scope.submitted = true;[m
[32m+     if (form.$valid) {[m
[32m+       Auth.login({[m
[32m+         email: $scope.user.email,[m
[32m+         password: $scope.user.password[m
[32m+       })[m
[32m+         .then(function () {[m
[32m+           $state.go('main');[m
[32m+         })[m
[32m+         .catch(function (err) {[m
[32m+           $scope.errors.other = err.message;[m
[32m+         });[m
[32m+     } else {[m
[32m+       $scope.errors.other = "password's dont match"[m
[32m++>>>>>>> 28deb7ad8b7bc8873f37eb52da4eaf89f969a3dd[m
      }[m
[32m+   };[m
[32m+ [m
[32m+   $scope.loginOauth = function (provider) {[m
[32m+     $window.location.href = '/auth/' + provider;[m
[32m+   };[m
[32m+ }[m
  [m
  [m
[31m- }());[m
  [m
[1mdiff --cc client/app/app.js[m
[1mindex 07e84bf,b12c422..0000000[m
[1m--- a/client/app/app.js[m
[1m+++ b/client/app/app.js[m
[36m@@@ -1,67 -1,110 +1,123 @@@[m
[31m- (function () {[m
[31m-   "use strict";[m
[32m+ angular.module('RentedApp', [[m
[32m+   /*[m
[32m+    * Order is not important. Angular makes a[m
[32m+    * pass to register all of the modules listed[m
[32m+    */[m
[32m+   'app.core',[m
[32m+   'app.widgets',[m
  [m
[31m-   angular.module('RentedApp', [[m
[31m-     /*[m
[31m-      * Order is not important. Angular makes a[m
[31m-      * pass to register all of the modules listed[m
[31m-      */[m
[31m-     'app.core',[m
[31m-     'app.widgets',[m
[32m+   /*[m
[32m+    * Feature areas[m
[32m+    */[m
[32m+   'app.dashboard',[m
[32m+   'app.layout',[m
[32m+   'app.account',[m
[32m+   'app.landing'[m
[32m+ ]).config(function ($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {[m
[32m+   'use strict';[m
  [m
[32m++<<<<<<< HEAD[m
[32m +    /*[m
[32m +     * Feature areas[m
[32m +     */[m
[32m +    'app.dashboard',[m
[32m +    'app.layout',[m
[32m +    'app.account'[m
[32m +  ])[m
[32m +    .config(function($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {[m
[32m +      $urlRouterProvider[m
[32m +        .otherwise('/dashboard');[m
[32m++=======[m
[32m+   // For any unmatched url, redirect to /[m
[32m+   $urlRouterProvider[m
[32m+     .otherwise('/');[m
[32m++>>>>>>> 28deb7ad8b7bc8873f37eb52da4eaf89f969a3dd[m
[32m+ [m
[32m+ [m
[32m+   //$stateProvider.state('reportError', {[m
[32m+   //  url: '/reportError',[m
[32m+   //  templateUrl: 'partials/reportError.html',[m
[32m+   //  controller: 'ReportErrorCtrl'[m
[32m+   //});[m
[32m+ [m
[32m+ [m
[32m+   $locationProvider.html5Mode(true);[m
[32m+   $httpProvider.interceptors.push('authInterceptor');[m
[32m+   $locationProvider.hashPrefix('!');[m
[32m+ [m
[32m+   $httpProvider.interceptors.push(['$q', '$injector', function ($q, $injector) {[m
[32m+     return {[m
[32m+       'request': function(config) {[m
[32m+         // do something on success[m
[32m+         // start with 30 seconds for default timeout value when calling any network dependent service such as db or elastic search[m
[32m+         config.timeout = 300000;[m
[32m+         return config;[m
[32m+       },[m
  [m
[31m-       $locationProvider.html5Mode(true);[m
[31m-       $httpProvider.interceptors.push('authInterceptor');[m
[31m-       $locationProvider.hashPrefix('!');[m
[31m-     })[m
[32m+       'requestError': function(rejection) {[m
[32m+         // do something on error[m
[32m+ //				if (canRecover(rejection)) {[m
[32m+ //					return responseOrNewPromise[m
[32m+ //				}[m
[32m+         return $q.reject(rejection);[m
[32m+       },[m
  [m
[31m-     .factory('authInterceptor', function($rootScope, $q, $cookieStore, $injector) {[m
[31m-       var state;[m
[31m-       return {[m
[31m-         // Add authorization token to headers[m
[31m-         request: function(config) {[m
[31m-           config.headers = config.headers || {};[m
[31m-           if ($cookieStore.get('token')) {[m
[31m-             config.headers.Authorization = 'Bearer ' + $cookieStore.get('token');[m
[31m-           }[m
[31m-           return config;[m
[31m-         },[m
[32m+       'response': function(response) {[m
[32m+         // do something on success[m
[32m+         return response;[m
[32m+       },[m
  [m
[31m-         // Intercept 401s and redirect you to login[m
[31m-         responseError: function(response) {[m
[31m-           if (response.status === 401) {[m
[31m-             (state || (state = $injector.get('$state'))).go('login');[m
[31m-             // remove any stale tokens[m
[31m-             $cookieStore.remove('token');[m
[31m-             return $q.reject(response);[m
[31m-           }[m
[31m-           else {[m
[31m-             return $q.reject(response);[m
[31m-           }[m
[32m+       'responseError': function (response) {[m
[32m+         //console.log('RESPONSE ERROR: ', response);[m
[32m+         return $q.reject(response);[m
[32m+       }[m
[32m+     };[m
[32m+   }]);[m
[32m+ })[m
[32m+ [m
[32m+   .factory('authInterceptor', function ($rootScope, $q, $cookieStore, $injector) {[m
[32m+     var state;[m
[32m+     return {[m
[32m+       // Add authorization token to headers[m
[32m+       request: function (config) {[m
[32m+         config.headers = config.headers || {};[m
[32m+         if ($cookieStore.get('token')) {[m
[32m+           config.headers.Authorization = 'Bearer ' + $cookieStore.get('token');[m
          }[m
[31m-       };[m
[31m-     })[m
[31m-     .run(['$rootScope', '$state', 'Auth', '$stateParams', function($rootScope, $state, Auth, $stateParams) {[m
[31m-       // Redirect to login if route requires auth and you're not logged in[m
[31m-       $rootScope.$on('$stateChangeStart', function(event, next) {[m
[31m-         Auth.isLoggedIn(function(loggedIn) {[m
[31m-         