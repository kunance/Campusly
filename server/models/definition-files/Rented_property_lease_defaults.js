/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'property_lease_defaults-custom.js' file in this directory.
2. Copy the code below and paste it into 'property_lease_defaults-custom.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('models/index.js'),
    model   = require('./property_lease_defaults.js'),
    util    = require('./utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("relatedOwnerid").onDelete = 'CASCADE'; 
util.getAttribute("id").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "rented.propertyLeaseDefaults",
    options: {
        tableName: "property_lease_defaults",
        schema: "Rented",
        timestamps: false
    },
    attributes: {
        "id": {
            type: Seq.INTEGER,
            field: "id",
            allowNull: false,
            unique: "property_lease_defaults_pkey"
        },
        "propertyid": {
            type: Seq.INTEGER,
            field: "propertyid",
            allowNull: false,
            references: "property",
            referencesKey: "propertyid"
        },
        "ownerid": {
            type: Seq.INTEGER,
            field: "ownerid",
            allowNull: false,
            references: "rented_user",
            referencesKey: "ownerid"
        },
        "qtydogsallowed": {
            type: Seq.INTEGER,
            field: "qtydogsallowed",
            allowNull: false
        },
        "qtycatsallowed": {
            type: Seq.INTEGER,
            field: "qtycatsallowed",
            allowNull: false
        },
        "qtyotherallowed": {
            type: Seq.INTEGER,
            field: "qtyotherallowed",
            allowNull: false
        },
        "animalsizelimitlbs": {
            type: Seq.INTEGER,
            field: "animalsizelimitlbs",
            allowNull: false
        },
        "fishtankallowed": {
            type: Seq.INTEGER,
            field: "fishtankallowed",
            allowNull: false
        },
        "preferredleaselength": {
            type: Seq.INTEGER,
            field: "preferredleaselength",
            allowNull: false
        },
        "preferredleaseunit": {
            type: Seq.STRING(250),
            field: "preferredleaseunit",
            allowNull: false
        },
        "createdat": {
            type: Seq.DATE,
            field: "createdat",
            allowNull: false
        },
        "updatedat": {
            type: Seq.DATE,
            field: "updatedat"
        },
        "deletedat": {
            type: Seq.DATE,
            field: "deletedat"
        }
    },
    relations: [{
        type: "belongsTo",
        model: "rented.rentedUser",
        schema: "Rented",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedOwnerid",
            foreignKey: "ownerid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "rented.property",
        schema: "Rented",
        table: "property",
        source: "generator",
        details: {
            as: "relatedPropertyid",
            foreignKey: "propertyid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};