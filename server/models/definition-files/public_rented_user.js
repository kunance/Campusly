/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'rented_user-custom.js' file in this directory.
2. Copy the code below and paste it into 'rented_user-custom.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('models/index.js'),
    model   = require('./rented_user.js'),
    util    = require('./utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("addressHistoryUseridFkeys").onDelete = 'CASCADE'; 
util.getAttribute("id").comment = 'This is the comment'; 

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "public.rentedUser",
    options: {
        tableName: "rented_user",
        schema: "public",
        timestamps: false
    },
    attributes: {
        "id": {
            type: Seq.INTEGER,
            field: "id",
            primaryKey: true,
            allowNull: false,
            unique: "rented_user_pkey"
        },
        "username": {
            type: Seq.STRING(50),
            field: "username"
        },
        "email": {
            type: Seq.STRING(255),
            field: "email",
            allowNull: false
        },
        "confirmedemail": {
            type: Seq.INTEGER,
            field: "confirmedemail",
            allowNull: false
        },
        "password": {
            type: Seq.STRING(128),
            field: "password",
            allowNull: false
        },
        "firstname": {
            type: Seq.STRING(50),
            field: "firstname",
            allowNull: false
        },
        "lastname": {
            type: Seq.STRING(50),
            field: "lastname",
            allowNull: false
        },
        "middlename": {
            type: Seq.STRING(50),
            field: "middlename"
        },
        "aboutme": {
            type: Seq.STRING(255),
            field: "aboutme"
        },
        "phone": {
            type: Seq.INTEGER,
            field: "phone"
        },
        "profileimage": {
            type: Seq.STRING(255),
            field: "profileimage"
        },
        "twitter": {
            type: Seq.STRING(45),
            field: "twitter"
        },
        "facebook": {
            type: Seq.STRING(45),
            field: "facebook"
        },
        "googleplus": {
            type: Seq.STRING(45),
            field: "googleplus"
        },
        "linkedin": {
            type: Seq.STRING(45),
            field: "linkedin"
        },
        "experianidtoken": {
            type: Seq.STRING(255),
            field: "experianidtoken"
        },
        "creditchecktoken": {
            type: Seq.STRING(255),
            field: "creditchecktoken"
        },
        "runidentitycheck": {
            type: Seq.INTEGER,
            field: "runidentitycheck",
            allowNull: false
        },
        "sharecreditreport": {
            type: Seq.INTEGER,
            field: "sharecreditreport",
            allowNull: false
        },
        "identitydate": {
            type: Seq.DATE,
            field: "identitydate"
        },
        "creditreportdate": {
            type: Seq.DATE,
            field: "creditreportdate"
        },
        "createdat": {
            type: Seq.DATE,
            field: "createdat",
            allowNull: false
        },
        "updatedat": {
            type: Seq.DATE,
            field: "updatedat"
        },
        "deletedat": {
            type: Seq.DATE,
            field: "deletedat"
        },
        "role": {
            type: Seq.STRING(45),
            field: "role"
        },
        "provider": {
            type: Seq.STRING(64),
            field: "provider"
        },
        "facebookoauthid": {
            type: Seq.STRING(64),
            field: "facebookoauthid"
        },
        "googleoauthid": {
            type: Seq.STRING(64),
            field: "googleoauthid"
        },
        "twitteroauthid": {
            type: Seq.STRING(64),
            field: "twitteroauthid"
        },
        "salt": {
            type: Seq.STRING(128),
            field: "salt",
            allowNull: false
        }
    },
    relations: [{
        type: "hasMany",
        model: "public.addressHistory",
        schema: "public",
        table: "address_history",
        source: "generator",
        details: {
            as: "addressHistoryUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.friend",
        schema: "public",
        table: "friend",
        source: "generator",
        details: {
            as: "friendFriendidFkeys",
            foreignKey: "friendid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.friend",
        schema: "public",
        table: "friend",
        source: "generator",
        details: {
            as: "friendUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.invitee",
        schema: "public",
        table: "invitee",
        source: "generator",
        details: {
            as: "inviteeInvitoridFkeys",
            foreignKey: "invitorid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.lessee",
        schema: "public",
        table: "lessee",
        source: "generator",
        details: {
            as: "lesseeUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.payment",
        schema: "public",
        table: "payment",
        source: "generator",
        details: {
            as: "paymentPayeeidFkeys",
            foreignKey: "payeeid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.payment",
        schema: "public",
        table: "payment",
        source: "generator",
        details: {
            as: "paymentPayeridFkeys",
            foreignKey: "payerid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.pet",
        schema: "public",
        table: "pet",
        source: "generator",
        details: {
            as: "petUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.propertyLeaseDefaults",
        schema: "public",
        table: "property_lease_defaults",
        source: "generator",
        details: {
            as: "propertyLeaseDefaultsOwneridFkeys",
            foreignKey: "ownerid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.propertyLikes",
        schema: "public",
        table: "property_likes",
        source: "generator",
        details: {
            as: "propertyLikesUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.propertyOwner",
        schema: "public",
        table: "property_owner",
        source: "generator",
        details: {
            as: "propertyOwnerOwneridFkeys",
            foreignKey: "ownerid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.rentalApplicant",
        schema: "public",
        table: "rental_applicant",
        source: "generator",
        details: {
            as: "rentalApplicantUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.roomListing",
        schema: "public",
        table: "room_listing",
        source: "generator",
        details: {
            as: "roomListingCreatoridFkeys",
            foreignKey: "creatorid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.roommate",
        schema: "public",
        table: "roommate",
        source: "generator",
        details: {
            as: "roommateRoommateidFkeys",
            foreignKey: "roommateid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.roommate",
        schema: "public",
        table: "roommate",
        source: "generator",
        details: {
            as: "roommateUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userCosigner",
        schema: "public",
        table: "user_cosigner",
        source: "generator",
        details: {
            as: "userCosignerCosgineridFkeys",
            foreignKey: "cosginerid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userCosigner",
        schema: "public",
        table: "user_cosigner",
        source: "generator",
        details: {
            as: "userCosignerCosingeeidFkeys",
            foreignKey: "cosingeeid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userEducation",
        schema: "public",
        table: "user_education",
        source: "generator",
        details: {
            as: "userEducationUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userFinancial",
        schema: "public",
        table: "user_financial",
        source: "generator",
        details: {
            as: "userFinancialUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userOccupation",
        schema: "public",
        table: "user_occupation",
        source: "generator",
        details: {
            as: "userOccupationUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userRecommendation",
        schema: "public",
        table: "user_recommendation",
        source: "generator",
        details: {
            as: "userRecommendationRecommendedidFkeys",
            foreignKey: "recommendedid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userRecommendation",
        schema: "public",
        table: "user_recommendation",
        source: "generator",
        details: {
            as: "userRecommendationRecommendoridFkeys",
            foreignKey: "recommendorid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userReference",
        schema: "public",
        table: "user_reference",
        source: "generator",
        details: {
            as: "userReferenceUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "hasMany",
        model: "public.userVehicle",
        schema: "public",
        table: "user_vehicle",
        source: "generator",
        details: {
            as: "userVehicleUseridFkeys",
            foreignKey: "userid",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedFriendFriendidFkeyUserids",
            foreignKey: "friendid",
            otherKey: "userid",
            through: "friend",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedFriendUseridFkeyFriendids",
            foreignKey: "userid",
            otherKey: "friendid",
            through: "friend",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.lease",
        schema: "public",
        table: "lease",
        source: "generator",
        details: {
            as: "relatedLesseeUseridFkeyLeaseids",
            foreignKey: "userid",
            otherKey: "leaseid",
            through: "lessee",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedPaymentPayeeidFkeyPayerids",
            foreignKey: "payeeid",
            otherKey: "payerid",
            through: "payment",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedPaymentPayeridFkeyPayeeids",
            foreignKey: "payerid",
            otherKey: "payeeid",
            through: "payment",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.property",
        schema: "public",
        table: "property",
        source: "generator",
        details: {
            as: "relatedPropertyLeaseDefaultsOwneridFkeyPropertyids",
            foreignKey: "ownerid",
            otherKey: "propertyid",
            through: "property_lease_defaults",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.property",
        schema: "public",
        table: "property",
        source: "generator",
        details: {
            as: "relatedPropertyLikesUseridFkeyPropertyids",
            foreignKey: "userid",
            otherKey: "propertyid",
            through: "property_likes",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.propertyOwnership",
        schema: "public",
        table: "property_ownership",
        source: "generator",
        details: {
            as: "relatedPropertyOwnerOwneridFkeyPropertyownershipids",
            foreignKey: "ownerid",
            otherKey: "propertyownershipid",
            through: "property_owner",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentalApplication",
        schema: "public",
        table: "rental_application",
        source: "generator",
        details: {
            as: "relatedRentalApplicantUseridFkeyRentalappids",
            foreignKey: "userid",
            otherKey: "rentalappid",
            through: "rental_applicant",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.property",
        schema: "public",
        table: "property",
        source: "generator",
        details: {
            as: "relatedRoomListingCreatoridFkeyPropertyids",
            foreignKey: "creatorid",
            otherKey: "propertyid",
            through: "room_listing",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedRoommateRoommateidFkeyUserids",
            foreignKey: "roommateid",
            otherKey: "userid",
            through: "roommate",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedRoommateUseridFkeyRoommateids",
            foreignKey: "userid",
            otherKey: "roommateid",
            through: "roommate",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedUserCosignerCosgineridFkeyCosingeeids",
            foreignKey: "cosginerid",
            otherKey: "cosingeeid",
            through: "user_cosigner",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedUserCosignerCosingeeidFkeyCosginerids",
            foreignKey: "cosingeeid",
            otherKey: "cosginerid",
            through: "user_cosigner",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedUserRecommendationRecommendedidFkeyRecommendorids",
            foreignKey: "recommendedid",
            otherKey: "recommendorid",
            through: "user_recommendation",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "public.rentedUser",
        schema: "public",
        table: "rented_user",
        source: "generator",
        details: {
            as: "relatedUserRecommendationRecommendoridFkeyRecommendedids",
            foreignKey: "recommendorid",
            otherKey: "recommendedid",
            through: "user_recommendation",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};