/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'room_listing_view-custom.js' file in this directory.
2. Copy the code below and paste it into 'room_listing_view-custom.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('models\index.js'),
    model   = require('./room_listing_view.js'),
    util    = require('./utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:

util.getAttribute("streetNumeric").comment = 'This is the comment';

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "roomListingView",
    options: {
        tableName: "room_listing_view",
        //schema: "public",
        timestamps: false
    },
    attributes: {
        "streetNumeric": {
            type: Seq.INTEGER,
            field: "streetNumeric"
        },
        "streetAddress": {
            type: Seq.TEXT,
            field: "streetAddress"
        },
        "city": {
            type: Seq.TEXT,
            field: "city"
        },
        "state": {
            type: Seq.TEXT,
            field: "state"
        },
        "zip": {
            type: Seq.INTEGER,
            field: "zip"
        },
        "apt": {
            type: Seq.TEXT,
            field: "apt"
        },
        "bldg": {
            type: Seq.TEXT,
            field: "bldg"
        },
        "type": {
            type: Seq.ENUM('apt', 'sfh', 'townhouse'),
            field: "type"
        },
        "bedrooms": {
            type: Seq.INTEGER,
            field: "bedrooms"
        },
        "bathrooms": {
            type: Seq.INTEGER,
            field: "bathrooms"
        },
        "id": {
            type: Seq.BIGINT,
            field: "id"
        },
        "propertyId": {
            type: Seq.BIGINT,
            field: "propertyId"
        },
        "creatorId": {
            type: Seq.BIGINT,
            field: "creatorId"
        },
        "monthlyPrice": {
            type: Seq.FLOAT(53),
            field: "monthlyPrice"
        },
        "securityDeposit": {
            type: Seq.FLOAT(53),
            field: "securityDeposit"
        },
        "availableMoveIn": {
            type: Seq.DATE,
            field: "availableMoveIn"
        },
        "leaseEndDate": {
            type: Seq.DATE,
            field: "leaseEndDate"
        },
        "leaseType": {
            type: Seq.ENUM('sub-lease', 'month-to-month', '"lease take over"'),
            field: "leaseType"
        },
        "gender": {
            type: Seq.ENUM('"no preference"', '"male only"', '"female only"'),
            field: "gender"
        },
        "monthlyUtilityCost": {
            type: Seq.INTEGER,
            field: "monthlyUtilityCost"
        },
        "roomType": {
            type: Seq.ENUM('single', 'double', 'loft', '"living room"'),
            field: "roomType"
        },
        "sharedBathroom": {
            type: Seq.BOOLEAN,
            field: "sharedBathroom"
        },
        "numRoomates": {
            type: Seq.INTEGER,
            field: "numRoomates"
        },
        "furnished": {
            type: Seq.BOOLEAN,
            field: "furnished"
        },
        "parkingAvailable": {
            type: Seq.BOOLEAN,
            field: "parkingAvailable"
        },
        "smokingAllowed": {
            type: Seq.BOOLEAN,
            field: "smokingAllowed"
        },
        "description": {
            type: Seq.TEXT,
            field: "description"
        },
        "createdAt": {
            type: Seq.DATE,
            field: "createdAt"
        },
        "updatedAt": {
            type: Seq.DATE,
            field: "updatedAt"
        },
        "deletedAt": {
            type: Seq.DATE,
            field: "deletedAt"
        }
    },
    relations: []
};
