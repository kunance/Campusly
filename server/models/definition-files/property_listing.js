/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

To modify this model:
1. Create 'property_listing-custom.js' file in this directory.
2. Copy the code below and paste it into 'property_listing-custom.js'.
3. Use utility methods to easily access orm properties.

"use strict";
var orm     = require('models\index.js'),
    model   = require('./property_listing.js'),
    util    = require('./utils.js')(model),
    Seq     = orm.Sequelize();

module.exports = model;

// Some utility methods:
util.getRelation("propertyimagesListings").onDelete = 'CASCADE';
util.getAttribute("propertyId").comment = 'This is the comment';

------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
    Seq = orm.Sequelize();
module.exports = {
    modelName: "propertyListing",
    options: {
        tableName: "property_listing",
        //schema: "public",
        timestamps: false
    },
    attributes: {
        "propertyId": {
            type: Seq.BIGINT,
            field: "propertyId",
            allowNull: false,
            references: "property",
            referencesKey: "propertyId"
        },
        "monthlyPrice": {
            type: Seq.FLOAT(53),
            field: "monthlyPrice",
            allowNull: false
        },
        "securityDeposit": {
            type: Seq.FLOAT(53),
            field: "securityDeposit"
        },
        "petDeposit": {
            type: Seq.FLOAT(53),
            field: "petDeposit"
        },
        "availableMoveIn": {
            type: Seq.DATE,
            field: "availableMoveIn",
            allowNull: false
        },
        "id": {
            type: Seq.BIGINT,
            field: "id",
            primaryKey: true,
            autoIncrement: true,
            allowNull: false,
            unique: "idx_41905_PRIMARY"
        },
        "leaseEndDate": {
            type: Seq.DATE,
            field: "leaseEndDate"
        },
        "leaseLength": {
            type: Seq.INTEGER,
            field: "leaseLength",
            allowNull: false
        },
        "leaseLengthUnit": {
            type: Seq.ENUM('day', 'week', 'month', 'year'),
            field: "leaseLengthUnit",
            allowNull: false
        },
        "leaseType": {
            type: Seq.ENUM('sub-lease', 'month-to-month', 'regular'),
            field: "leaseType",
            allowNull: false
        },
        "gender": {
            type: Seq.ENUM('"no preference"', '"male preferred"', '"female preferred"', '"male only"', '"female only"'),
            field: "gender",
            allowNull: false
        },
        "totalUtilityCost": {
            type: Seq.INTEGER,
            field: "totalUtilityCost",
            allowNull: false
        },
        "roomType": {
            type: Seq.ENUM('single', 'double', 'triple', 'loft', '"living room"'),
            field: "roomType",
            allowNull: false
        },
        "sharedBathroom": {
            type: Seq.BOOLEAN,
            field: "sharedBathroom"
        },
        "numRoomates": {
            type: Seq.INTEGER,
            field: "numRoomates",
            allowNull: false
        },
        "furnished": {
            type: Seq.BOOLEAN,
            field: "furnished"
        },
        "parkingAvailable": {
            type: Seq.BOOLEAN,
            field: "parkingAvailable"
        },
        "smokingAllowed": {
            type: Seq.BOOLEAN,
            field: "smokingAllowed"
        },
        "description": {
            type: Seq.TEXT,
            field: "description"
        },
        "status": {
            type: Seq.ENUM('available', '"rental pending"', 'rented'),
            field: "status"
        },
        "contactPhone": {
            type: Seq.BIGINT,
            field: "contactPhone"
        },
        "contactEmail": {
            type: Seq.TEXT,
            field: "contactEmail",
            allowNull: false
        },
        "createdAt": {
            type: Seq.DATE,
            field: "createdAt",
            allowNull: false
        },
        "updatedAt": {
            type: Seq.DATE,
            field: "updatedAt"
        },
        "deletedAt": {
            type: Seq.DATE,
            field: "deletedAt"
        }
    },
    relations: [{
        type: "hasMany",
        model: "propertyImages",
        schema: "public",
        table: "property_images",
        source: "generator",
        details: {
            as: "propertyimagesListings",
            foreignKey: "listingId",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsTo",
        model: "property",
        schema: "public",
        table: "property",
        source: "generator",
        details: {
            as: "relatedPropertyId",
            foreignKey: "propertyId",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }, {
        type: "belongsToMany",
        model: "property",
        schema: "public",
        table: "property",
        source: "generator",
        details: {
            as: "relatedPropertyimagesListingPropertyIds",
            foreignKey: "listingId",
            otherKey: "propertyId",
            through: "property_images",
            onDelete: "NO ACTION",
            onUpdate: "NO ACTION"
        }
    }]
};
