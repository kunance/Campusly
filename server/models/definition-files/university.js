/*jslint node: true */
"use strict";
/*------------------------------------------------------------------------------------

 DO NOT EDIT THIS FILE !!! It is generated automatically and will be overwritten.

 To modify this model:
 1. Create 'university-custom.js' file in this directory.
 2. Copy the code below and paste it into 'university-custom.js'.
 3. Use utility methods to easily access orm properties.

 "use strict";
 var orm     = require('models\index.js'),
 model   = require('./university.js'),
 util    = require('./utils.js')(model),
 Seq     = orm.Sequelize();

 module.exports = model;

 // Some utility methods:
 util.getRelation("univcalquarterUniversities").onDelete = 'CASCADE';
 util.getAttribute("id").comment = 'This is the comment';

 ------------------------------------------------------------------------------------*/
var orm = require('../index.js'),
  Seq = orm.Sequelize();
module.exports = {
  modelName: "university",
  options: {
    tableName: "university",
    //schema: "public",
    timestamps: false
  },
  attributes: {
    "id": {
      type: Seq.BIGINT,
      field: "id",
      primaryKey: true,
      autoIncrement: true,
      allowNull: false,
      unique: "idx_42031_PRIMARY"
    },
    "name": {
      type: Seq.TEXT,
      field: "name",
      allowNull: false
    },
    "academicYearType": {
      type: Seq.ENUM('quarter', 'semester'),
      field: "academicYearType"
    },
    "streetNumeric": {
      type: Seq.INTEGER,
      field: "streetNumeric",
      allowNull: false
    },
    "streetAddress": {
      type: Seq.TEXT,
      field: "streetAddress",
      allowNull: false
    },
    "apt": {
      type: Seq.TEXT,
      field: "apt"
    },
    "city": {
      type: Seq.TEXT,
      field: "city",
      allowNull: false
    },
    "state": {
      type: Seq.TEXT,
      field: "state",
      allowNull: false
    },
    "zip": {
      type: Seq.INTEGER,
      field: "zip",
      allowNull: false
    },
    "latitude": {
      type: Seq.DECIMAL(10, 8),
      field: "latitude"
    },
    "longitude": {
      type: Seq.DECIMAL(11, 8),
      field: "longitude"
    },
    "startDate": {
      type: Seq.DATE,
      field: "startDate",
      allowNull: false
    },
    "endDate": {
      type: Seq.DATE,
      field: "endDate"
    },
    "createdAt": {
      type: Seq.DATE,
      field: "createdAt",
      allowNull: false
    },
    "updatedAt": {
      type: Seq.DATE,
      field: "updatedAt"
    },
    "deletedAt": {
      type: Seq.DATE,
      field: "deletedAt"
    }
  },
  relations: [{
    type: "hasMany",
    model: "universityCalenderQuater",
    schema: "public",
    table: "university_calender_quater",
    source: "generator",
    details: {
      as: "univcalquarterUniversities",
      foreignKey: "universityId",
      onDelete: "NO ACTION",
      onUpdate: "NO ACTION"
    }
  }, {
    type: "hasMany",
    model: "universityCalenderSemester",
    schema: "public",
    table: "university_calender_semester",
    source: "generator",
    details: {
      as: "univcalsemesterUniversities",
      foreignKey: "universityId",
      onDelete: "NO ACTION",
      onUpdate: "NO ACTION"
    }
  }, {
    type: "hasMany",
    model: "userEducation",
    schema: "public",
    table: "user_education",
    source: "generator",
    details: {
      as: "fKtoUniversities",
      foreignKey: "universityId",
      onDelete: "NO ACTION",
      onUpdate: "NO ACTION"
    }
  }, {
    type: "belongsToMany",
    model: "rentedUser",
    schema: "public",
    table: "rented_user",
    source: "generator",
    details: {
      as: "relatedFKtoUniversityUserIds",
      foreignKey: "universityId",
      otherKey: "userId",
      through: "user_education",
      onDelete: "NO ACTION",
      onUpdate: "NO ACTION"
    }
  }]
};
